# Generated by Django 2.1.3 on 2020-03-24 04:38

import backend.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import image_cropping.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('utils', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Analitics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True, null=True)),
                ('area', models.CharField(blank=True, max_length=100, null=True)),
                ('paso', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('data', models.TextField(blank=True, max_length=1000, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Anno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('antiguedad', models.PositiveSmallIntegerField(default=0)),
                ('factor', models.FloatField(default=0.0)),
            ],
            options={
                'verbose_name': 'año',
                'verbose_name_plural': 'Años de antiguedad',
            },
        ),
        migrations.CreateModel(
            name='Archivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('nombre', models.CharField(max_length=250, null=True)),
                ('tiene_caducidad', models.BooleanField(default=False)),
                ('fecha_caducidad', models.DateField(null=True)),
                ('archivo', models.FileField(blank=True, null=True, upload_to='archivos')),
                ('key', models.PositiveIntegerField(null=True)),
                ('created_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='archivo_user_created', to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('updated_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='archivo_user_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Aseguradora',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='code')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('active', models.BooleanField(default=True)),
                ('ruc', models.CharField(blank=True, max_length=14, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='empresas/logos')),
                ('cropping', image_cropping.fields.ImageRatioField('logo', '400x400', adapt_rotation=False, allow_fullsize=True, free_crop=False, help_text=None, hide_image_field=False, size_warning=False, verbose_name='vista previa')),
                ('phone', models.CharField(blank=True, max_length=80, null=True, verbose_name='teléfono de contacto')),
                ('email', models.EmailField(blank=True, max_length=165, null=True, verbose_name='email de contacto')),
                ('address', models.TextField(blank=True, max_length=600, null=True, verbose_name='dirección')),
                ('emision', models.FloatField(default=2.0, verbose_name='derecho de emision')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='benAccidente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('numero_poliza', models.CharField(blank=True, max_length=30, null=True, verbose_name='Número de Póliza')),
                ('parentesco', models.CharField(blank=True, choices=[('PADRE', 'Padre'), ('MADRE', 'Madre'), ('HERMANO', 'Hermano'), ('HERMANA', 'Hermana'), ('CONYUGE', 'Cónyuge'), ('HIJO', 'Hijo'), ('HIJA', 'Hija')], max_length=65, null=True)),
                ('primer_nombre', models.CharField(blank=True, max_length=125, null=True)),
                ('segundo_nombre', models.CharField(blank=True, max_length=125, null=True)),
                ('apellido_paterno', models.CharField(blank=True, max_length=125, null=True)),
                ('apellido_materno', models.CharField(blank=True, max_length=125, null=True)),
                ('costo', models.FloatField(blank=True, null=True)),
                ('suma_asegurada', models.FloatField(blank=True, null=True)),
                ('tipo_identificacion', models.CharField(blank=True, max_length=25, null=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('file_cedula', models.FileField(blank=True, null=True, upload_to='cedulas')),
                ('prima', models.FloatField(default=0.0)),
                ('carnet', models.FloatField(default=0.0)),
                ('emision', models.FloatField(default=0.0)),
            ],
            options={
                'verbose_name': 'beneficiario',
                'verbose_name_plural': 'beneficiarios',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='benSepelio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('numero_poliza', models.CharField(blank=True, max_length=30, null=True, verbose_name='Número de Póliza')),
                ('parentesco', models.CharField(blank=True, choices=[('PADRE', 'Padre'), ('MADRE', 'Madre'), ('HERMANO', 'Hermano'), ('HERMANA', 'Hermana'), ('CONYUGE', 'Cónyuge'), ('HIJO', 'Hijo'), ('HIJA', 'Hija')], max_length=65, null=True)),
                ('primer_nombre', models.CharField(blank=True, max_length=125, null=True)),
                ('segundo_nombre', models.CharField(blank=True, max_length=125, null=True)),
                ('apellido_paterno', models.CharField(blank=True, max_length=125, null=True)),
                ('apellido_materno', models.CharField(blank=True, max_length=125, null=True)),
                ('costo', models.FloatField(blank=True, null=True)),
                ('suma_asegurada', models.FloatField(blank=True, null=True)),
                ('tipo_identificacion', models.CharField(blank=True, max_length=25, null=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('file_cedula', models.FileField(blank=True, null=True, upload_to='cedulas')),
            ],
            options={
                'verbose_name': 'beneficiario',
                'verbose_name_plural': 'beneficiarios',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CampoAdicional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=65, verbose_name='nombre')),
                ('label', models.CharField(max_length=65, verbose_name='etiqueta')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domicilio', models.TextField(blank=True, max_length=400, null=True)),
                ('telefono', models.CharField(blank=True, max_length=25, null=True, verbose_name='teléfono')),
                ('cedula', models.CharField(blank=True, max_length=14, null=True, verbose_name='número de identificación')),
                ('primer_nombre', models.CharField(blank=True, max_length=125, null=True)),
                ('segundo_nombre', models.CharField(blank=True, max_length=125, null=True)),
                ('apellido_paterno', models.CharField(blank=True, max_length=125, null=True, verbose_name='primer apellido')),
                ('apellido_materno', models.CharField(blank=True, max_length=125, null=True, verbose_name='segundo apellido')),
                ('genero', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1, null=True)),
                ('celular', models.CharField(blank=True, max_length=8, null=True)),
                ('email_personal', models.EmailField(blank=True, max_length=255, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='perfiles')),
                ('estado_civil', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Soltero'), (2, 'Casado'), (3, 'Union de hecho libre')], null=True)),
                ('cropping', image_cropping.fields.ImageRatioField('foto', '400x400', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=False, verbose_name='cropping')),
                ('razon_social', models.CharField(blank=True, max_length=250, null=True)),
                ('nombre_comercial', models.CharField(blank=True, max_length=250, null=True)),
                ('ruc', models.CharField(blank=True, max_length=14, null=True, verbose_name='número de identificación')),
                ('fecha_constitucion', models.DateField(blank=True, null=True, verbose_name='fecha de constitución')),
                ('actividad_economica', models.CharField(blank=True, max_length=250, null=True, verbose_name='actividad económica')),
                ('pagina_web', models.CharField(blank=True, max_length=250, null=True, verbose_name='página web')),
                ('observaciones', models.TextField(blank=True, max_length=500, null=True)),
                ('nombre', models.CharField(blank=True, max_length=600, null=True)),
                ('tipo_identificacion', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Cédula'), (2, 'Pasaporte'), (3, 'Cédula de residente'), (4, 'Otro')], default=1, null=True)),
                ('tipo_cliente', models.PositiveIntegerField(blank=True, choices=[(1, 'Persona Natural'), (2, 'Persona Jurídica')], default=1)),
                ('estado_cliente', models.PositiveIntegerField(blank=True, choices=[(1, 'Prospecto'), (2, 'Activo'), (3, 'Inactivo')], null=True)),
                ('cambiar_pass', models.BooleanField(default=False, verbose_name='Exigir cambio de contraseña')),
                ('sucursal', models.CharField(blank=True, max_length=125, null=True)),
                ('codigo_empleado', models.CharField(blank=True, max_length=25, null=True)),
                ('cargo', models.CharField(blank=True, max_length=125, null=True)),
                ('es_cesionario', models.BooleanField(default=False)),
                ('contacto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cliente_contacto_referencia', to='backend.Cliente')),
                ('departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cliente_departamento', to='utils.Departamento')),
                ('empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cliente_empresa_referencia', to='backend.Cliente')),
            ],
            options={
                'verbose_name': 'cliente',
            },
        ),
        migrations.CreateModel(
            name='Cobertura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, null=True, verbose_name='nombre')),
                ('description', models.TextField(blank=True, max_length=1500, null=True, verbose_name='Descripción detallada')),
                ('tipo_calculo', models.PositiveSmallIntegerField(choices=[(1, 'PRECIO FIJO'), (2, 'TASA PORCENTUAL'), (3, 'TASA PORMILLAR')], default=3)),
                ('tipo_cobertura', models.PositiveSmallIntegerField(choices=[(1, 'Básica'), (2, 'Amplia'), (3, 'Adicional'), (4, 'Opcional')], default=1, verbose_name='tipo de cobertura')),
                ('tipo_exceso', models.CharField(choices=[('0.0', '0.0'), ('valor_nuevo', 'Valor de Nuevo'), ('valor_depreciado', 'Valor Depreciado'), ('otro', 'Otro')], default='0.0', max_length=25, verbose_name='variable de referencia')),
                ('iva', models.BooleanField(default=True, verbose_name='aplica iva')),
            ],
            options={
                'verbose_name': 'cobertura',
                'verbose_name_plural': 'coberturas ofrecidas',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='CoberturaPoliza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.FloatField(default=0.0)),
                ('cobertura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Cobertura')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('comentario', models.CharField(max_length=500, null=True)),
                ('key', models.PositiveIntegerField(null=True)),
                ('created_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comentario_user_created', to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('updated_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comentario_user_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatoPoliza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_data', models.CharField(blank=True, max_length=1000000, null=True, verbose_name='datos técnicos')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Depreciacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aseguradora', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tabla_depreciacion', to='backend.Aseguradora')),
            ],
            options={
                'verbose_name': 'tabla',
                'verbose_name_plural': 'Tablas de Depreciación',
            },
        ),
        migrations.CreateModel(
            name='DetalleCobertura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('monto', models.FloatField(default=0.0)),
                ('cobertura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Cobertura')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entidad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='code')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('active', models.BooleanField(default=True)),
                ('descuento', models.FloatField(default=0.0)),
            ],
            options={
                'verbose_name_plural': 'entidades',
            },
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=65, verbose_name='nombre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(max_length=65)),
                ('porcentaje_deducible', models.FloatField(default=0.25, help_text='usar formato decimar. Ejemplo 0.05 = 5%')),
                ('minimo', models.FloatField(default=200.0)),
                ('rotura_vidrios', models.FloatField(default=50.0)),
            ],
            options={
                'verbose_name_plural': 'marcas con recargo',
            },
        ),
        migrations.CreateModel(
            name='Moneda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moneda', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(blank=True, null=True)),
                ('benaccidente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.benAccidente')),
                ('bensepelio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.benSepelio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrdenTrabajo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='code')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('tipo', models.CharField(choices=[('CF', 'Sepelio'), ('AP', 'Accidente')], default='CF', max_length=3)),
                ('aseguradora', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Aseguradora')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'ordenes de trabajo',
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.FloatField(default=0.0)),
                ('numero', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('fecha_vence', models.DateField(null=True)),
                ('fecha_pago', models.DateField(null=True)),
                ('estado', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Anulado'), (1, 'Vigente'), (2, 'Vencido'), (3, 'Pagado')], default=1, null=True)),
            ],
            options={
                'ordering': ['fecha_vence'],
            },
        ),
        migrations.CreateModel(
            name='Poliza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('tipo_poliza', models.PositiveSmallIntegerField(choices=[(1, 'Individual'), (2, 'Colectiva')], default=1, null=True)),
                ('fecha_emision', models.DateField(blank=True, null=True, verbose_name='fecha de inicio vigencia')),
                ('fecha_vence', models.DateField(blank=True, null=True, verbose_name='fecha fin de vigencia')),
                ('fecha_pago', models.DateField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=25, null=True)),
                ('no_poliza', models.CharField(blank=True, max_length=25, null=True, verbose_name='número de póliza')),
                ('no_recibo', models.CharField(blank=True, max_length=25, null=True, verbose_name='número de recibo')),
                ('concepto', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Nueva Póliza'), (2, 'Renovación')], default=1, null=True)),
                ('tipo_cobertura', models.CharField(blank=True, choices=[(1, 'Básica'), (2, 'Amplia'), (3, 'Adicional'), (4, 'Opcional')], max_length=165, null=True)),
                ('estado_poliza', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Pendiente'), (1, 'Activa'), (2, 'Vencida'), (3, 'Renovada'), (4, 'Cancelada'), (5, 'Anulada'), (6, 'Otro')], default=0, null=True)),
                ('nombres', models.CharField(blank=True, max_length=165, null=True, verbose_name='nombre')),
                ('apellidos', models.CharField(blank=True, max_length=165, null=True)),
                ('cedula', models.CharField(blank=True, max_length=14, null=True)),
                ('celular', models.CharField(blank=True, max_length=8, null=True)),
                ('telefono', models.CharField(blank=True, max_length=25, null=True)),
                ('domicilio', models.TextField(blank=True, max_length=400, null=True)),
                ('card_number', models.CharField(blank=True, max_length=40, null=True)),
                ('card_expiry', models.CharField(blank=True, max_length=40, null=True)),
                ('card_type', models.CharField(blank=True, max_length=40, null=True)),
                ('marca', models.CharField(blank=True, max_length=65, null=True)),
                ('porcentaje_deducible', models.FloatField(blank=True, default=0.2, help_text='usar formato decimar. Ejemplo 0.05 = 5%', null=True)),
                ('porcentaje_deducible_extension', models.FloatField(blank=True, default=0.3, help_text='usar formato decimar. Ejemplo 0.05 = 5%', null=True)),
                ('minimo_deducible', models.FloatField(blank=True, default=100.0, null=True)),
                ('minimo_deducible_extension', models.FloatField(blank=True, default=100.0, null=True)),
                ('deducible_rotura_vidrios', models.FloatField(blank=True, default=0.0, null=True)),
                ('modelo', models.CharField(blank=True, max_length=65, null=True)),
                ('anno', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='año')),
                ('chasis', models.CharField(blank=True, max_length=65, null=True)),
                ('motor', models.CharField(blank=True, max_length=65, null=True)),
                ('circulacion', models.CharField(blank=True, max_length=65, null=True)),
                ('placa', models.CharField(blank=True, max_length=65, null=True)),
                ('color', models.CharField(blank=True, max_length=65, null=True)),
                ('costo_exceso', models.FloatField(blank=True, default=0.0, null=True)),
                ('monto_exceso', models.FloatField(blank=True, default=0.0, null=True)),
                ('valor_nuevo', models.FloatField(blank=True, default=0.0, null=True)),
                ('suma_asegurada', models.FloatField(blank=True, default=0.0, null=True, verbose_name='suma asegurada total')),
                ('subtotal', models.FloatField(blank=True, default=0.0, null=True)),
                ('descuento', models.FloatField(blank=True, default=0.0, null=True)),
                ('emision', models.FloatField(blank=True, default=0.0, null=True)),
                ('iva', models.FloatField(blank=True, default=0.0, null=True)),
                ('otros', models.FloatField(blank=True, default=0.0, null=True)),
                ('total', models.FloatField(blank=True, default=0.0, null=True)),
                ('per_comision', models.FloatField(blank=True, default=0.0, null=True, verbose_name='% comisión')),
                ('amount_comision', models.FloatField(blank=True, default=0.0, null=True, verbose_name='total comisión')),
                ('cesion_derecho', models.BooleanField(default=False, verbose_name='¿tiene cesión de derecho?')),
                ('forma_pago', models.CharField(blank=True, default='anual', max_length=25, null=True)),
                ('f_pago', models.PositiveIntegerField(blank=True, choices=[(1, 'Contado'), (2, 'Fraccionado')], null=True, verbose_name='forma de pago')),
                ('medio_pago', models.CharField(blank=True, choices=[('debito_automatico', 'Débito automático'), ('deduccion_nomina', 'Deducción de nómina'), ('deposito_referenciado', 'Depósito referenciado')], max_length=25, null=True)),
                ('m_pago', models.PositiveIntegerField(blank=True, choices=[(1, 'Transferencia'), (2, 'Cheques'), (3, 'Depositos'), (6, 'Tarjeta de Credito')], null=True, verbose_name='medio de pago')),
                ('cuotas', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('monto_cuota', models.FloatField(blank=True, default=0.0, null=True)),
                ('moneda_cobro', models.CharField(blank=True, max_length=3, null=True)),
                ('banco_emisor', models.CharField(blank=True, max_length=25, null=True)),
                ('file_circulacion', models.FileField(blank=True, null=True, upload_to=backend.models.get_media_url)),
                ('file_cedula', models.FileField(blank=True, null=True, upload_to=backend.models.get_media_url)),
                ('file_carta', models.FileField(blank=True, null=True, upload_to=backend.models.get_media_url)),
                ('notificado', models.BooleanField(default=False)),
                ('total_pagos', models.FloatField(default=0.0)),
                ('aseguradora', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Aseguradora')),
                ('beneficiario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Entidad')),
                ('cesioinario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Cliente')),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='polizas_automovil_cliente', to='backend.Cliente')),
                ('contratante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='polizas_automovil_contratante', to='backend.Cliente')),
                ('grupo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Grupo')),
                ('moneda', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Moneda')),
            ],
            options={
                'verbose_name': 'póliza',
                'verbose_name_plural': 'Pólizas',
                'permissions': (('report_debito_automatico', 'report_debito_automatico'), ('report_cotizaciones', 'report_cotizaciones'), ('reporte_deduccion_nomina', 'reporte_deduccion_nomina'), ('reporte_polizas_vencer', 'reporte_polizas_vencer')),
            },
        ),
        migrations.CreateModel(
            name='Precio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.FloatField(default=0.0)),
                ('available', models.BooleanField(default=True)),
                ('aseguradora', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Aseguradora')),
                ('cobertura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='precios', to='backend.Cobertura')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ramo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=65, verbose_name='nombre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Referencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(max_length=65)),
                ('modelo', models.CharField(max_length=65)),
                ('tipo', models.CharField(max_length=165, null=True)),
                ('clase', models.CharField(max_length=165, null=True)),
                ('anno', models.PositiveSmallIntegerField(verbose_name='año')),
                ('valor', models.FloatField(default=0.0)),
                ('chasis', models.CharField(blank=True, max_length=125, null=True)),
                ('motor', models.CharField(blank=True, max_length=125, null=True)),
            ],
            options={
                'verbose_name': 'valor',
                'verbose_name_plural': 'valores de referencia',
            },
        ),
        migrations.CreateModel(
            name='SubRamo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=65, verbose_name='nombre')),
                ('ramo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Ramo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sucursal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='code')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('prioridad', models.PositiveIntegerField(choices=[(1, 'Baja'), (2, 'Media'), (3, 'Alta')], default=2)),
                ('vence', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(blank=True, choices=[('Pendiente', 'Pendiente'), ('En Proceso', 'En Proceso'), ('Finalizado', 'Finalizado')], default='Pendiente', max_length=55, null=True)),
                ('code', models.CharField(blank=True, max_length=10, null=True, verbose_name='número')),
                ('descripcion', models.TextField(blank=True, max_length=600, null=True)),
                ('nombres', models.CharField(blank=True, max_length=165, null=True)),
                ('apellidos', models.CharField(blank=True, max_length=165, null=True)),
                ('email', models.EmailField(blank=True, max_length=250, null=True)),
                ('cedula', models.CharField(blank=True, max_length=14, null=True)),
                ('celular', models.CharField(blank=True, max_length=8, null=True)),
                ('telefono', models.CharField(blank=True, max_length=25, null=True)),
                ('domicilio', models.TextField(blank=True, max_length=400, null=True)),
                ('referente', models.CharField(blank=True, choices=[('auto', 'Auto'), ('sepelio', 'Sepelio'), ('accidente', 'Accidente'), ('otro', 'Otro')], max_length=125, null=True)),
                ('movimiento', models.CharField(blank=True, choices=[('1', 'Solicitar cambios en la Póliza'), ('2', 'Dar de baja'), ('3', 'Problemas de cobranza'), ('4', 'Quiero asesoría'), ('5', 'Aperturar un reclamo'), ('6', 'Error en la página'), ('7', 'No encuentro mi seguro'), ('8', 'Otro')], max_length=125, null=True)),
                ('motivo', models.CharField(blank=True, choices=[('1', 'Por venta'), ('2', 'Ya no quiero mi seguro'), ('3', 'Cancelación de prestamo')], max_length=125, null=True)),
                ('marca', models.CharField(blank=True, max_length=65, null=True)),
                ('modelo', models.CharField(blank=True, max_length=65, null=True)),
                ('anno', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='año')),
                ('chasis', models.CharField(blank=True, max_length=65, null=True)),
                ('motor', models.CharField(blank=True, max_length=65, null=True)),
                ('circulacion', models.FileField(blank=True, null=True, upload_to='cotizaciones')),
                ('placa', models.CharField(blank=True, max_length=65, null=True)),
                ('color', models.CharField(blank=True, max_length=65, null=True)),
                ('uso', models.CharField(blank=True, max_length=65, null=True)),
                ('valor_nuevo', models.FloatField(default=0.0)),
                ('suma_asegurada', models.FloatField(default=0.0)),
                ('subtotal', models.FloatField(default=0.0)),
                ('emision', models.FloatField(default=0.0)),
                ('iva', models.FloatField(default=0.0)),
                ('total', models.FloatField(default=0.0)),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_cliente', to='backend.Cliente')),
                ('poliza', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='poliza_resultante', to='backend.Poliza')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticketes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trámite',
            },
        ),
        migrations.AddField(
            model_name='poliza',
            name='ramo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Ramo'),
        ),
        migrations.AddField(
            model_name='poliza',
            name='referencia',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Referencia'),
        ),
        migrations.AddField(
            model_name='poliza',
            name='sub_ramo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.SubRamo'),
        ),
        migrations.AddField(
            model_name='poliza',
            name='ticket',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_de_baja', to='backend.Ticket'),
        ),
        migrations.AddField(
            model_name='poliza',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='polizas_automovil', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pago',
            name='poliza',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='backend.Poliza'),
        ),
        migrations.AddField(
            model_name='notificacion',
            name='poliza',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.Poliza'),
        ),
        migrations.AddField(
            model_name='datopoliza',
            name='poliza',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datos_tecnicos', to='backend.Poliza'),
        ),
        migrations.AddField(
            model_name='coberturapoliza',
            name='poliza',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Poliza'),
        ),
        migrations.AddField(
            model_name='cobertura',
            name='sub_ramo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coberturas', to='backend.SubRamo'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='entidad',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.Entidad'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='municipio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cliente_municipio', to='utils.Municipio'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='representante',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cliente_representante_legal', to='backend.Cliente'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='campoadicional',
            name='sub_ramo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='datos_tecnicos', to='backend.SubRamo'),
        ),
        migrations.AddField(
            model_name='bensepelio',
            name='empleado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiarios_bensepelio', to='backend.Cliente'),
        ),
        migrations.AddField(
            model_name='bensepelio',
            name='orden',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orden_bensepelio', to='backend.OrdenTrabajo'),
        ),
        migrations.AddField(
            model_name='bensepelio',
            name='ticket',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Ticket'),
        ),
        migrations.AddField(
            model_name='benaccidente',
            name='empleado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiarios_benaccidente', to='backend.Cliente'),
        ),
        migrations.AddField(
            model_name='benaccidente',
            name='orden',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orden_benaccidente', to='backend.OrdenTrabajo'),
        ),
        migrations.AddField(
            model_name='benaccidente',
            name='ticket',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Ticket'),
        ),
        migrations.AddField(
            model_name='anno',
            name='depreciacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annos', to='backend.Depreciacion'),
        ),
        migrations.CreateModel(
            name='ClienteJuridico',
            fields=[
            ],
            options={
                'verbose_name': 'persona jurídica',
                'verbose_name_plural': 'clientes',
                'proxy': True,
                'indexes': [],
            },
            bases=('backend.cliente',),
        ),
        migrations.CreateModel(
            name='ClienteNatural',
            fields=[
            ],
            options={
                'verbose_name': 'persona natural',
                'verbose_name_plural': 'clientes',
                'proxy': True,
                'indexes': [],
            },
            bases=('backend.cliente',),
        ),
        migrations.CreateModel(
            name='ClienteProspecto',
            fields=[
            ],
            options={
                'verbose_name': 'prospecto',
                'proxy': True,
                'indexes': [],
            },
            bases=('backend.cliente',),
        ),
        migrations.CreateModel(
            name='Contacto',
            fields=[
            ],
            options={
                'verbose_name': 'contacto',
                'proxy': True,
                'indexes': [],
            },
            bases=('backend.cliente',),
        ),
    ]
